@using Resources
@model ListIt_WebFrontend.Models.ListsVM


@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewBag.Title = Lang.yourLists;
}



    <div class="container-fluid">
        <h1 class="text-center pageheading">@ViewBag.Title</h1>

        @if (ViewBag.Message != null)
        {
            <div class="alert alert-success alert-dismissible fade show" role="alert">
                <p class="text-center mb-0">
                    @ViewBag.Message
                </p>
                <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
        }
        @if (ViewBag.Error != null)
        {
            <div class="alert alert-danger alert-dismissible fade show" role="alert">
                <p class="text-center mb-0">
                    @ViewBag.Error
                </p>
                <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>            
        }


        <ul class="list-group">

            <!-- CREATE LI-ITEM FOR EACH LIST -->
            @foreach (var list in Model.AllUserLists)
            {

                <li class="list-group-item d-flex justify-content-center">
                    @if (list.ListAccessTypeId == 3)
                    {
                        @Html.ActionLink(list.Name, "SingleList", "List", new { @id = list.Id }, htmlAttributes: new { @class = "listLinksReadonly" })
                    }
                    else if (list.ListAccessTypeId == 4)
                    {
                        @Html.ActionLink(list.Name, "SingleList", "List", new { @id = list.Id }, htmlAttributes: new { @class = "listLinksWrite" })
                    }
                    else
                    {
                        @Html.ActionLink(list.Name, "SingleList", "List", new { @id = list.Id }, htmlAttributes: new { @class = "listLinks" })

                    }
                </li>
            }
        </ul>

        <div class="w-100 d-flex justify-content-center box">
            <button class="btn align-baseline" type="button" data-toggle="modal" data-target="#modalCreateList">
                <!-- + ADD ICON -->
                <i class="fa fa-plus-circle fa-3x"></i>
            </button>
        </div>




    </div>


<!-- Modal ADD LIST -->
<div class="modal fade" id="modalCreateList" tabindex="-1" role="dialog" aria-labelledby="modalAddTitle" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="modalAddTitle">@Lang.createList</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                @using (Html.BeginForm("CreateList", "List", FormMethod.Post))
                {
                    @Html.AntiForgeryToken()
                    <div class="form-group">
                        @Html.Editor("listname", new { @class = "form-control", type = "text", value = "", placeholder = "Groceries" })

                    </div>
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">@Lang.close</button>
                    <button type="submit" class="btn btn-primary">@Lang.save</button>
                }
            </div>
        </div>
    </div>
</div>



<script>
    /*JQuery script to get listID from button and send to modal*/

    //$(document).ready(function () {

    // for rename:
    $('#modalRename').on('show.bs.modal', function (event) {
        var button = $(event.relatedTarget) // Button that triggered the modal
        var listId = button.data('listId') // Extract info from data-* attributes
        var listName = button.data('listName')
        var modal = $(this)
        modal.find('.modal-body .rename').val(listName)
        modal.find('.modal-body .id').val(listId)

        //$(event.currentTarget).find('input["rename"]').val(listName);
    });

    $('#modalDelete').on('show.bs.modal', function (event) {
        var button = $(event.relatedTarget) // Button that triggered the modal
        var listId = button.data('listId') // Extract info from data-* attributes
        var modal = $(this)
        modal.find('.modal-body input #listId').val(listId)
    })
    //})

</script>
